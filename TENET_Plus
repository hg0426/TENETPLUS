#!/bin/bash
## specify $1 for input *.csv file, $2 for number of parallel jobs, $3 for trajectory_file , $4 for cell_select_file, $5 for historyLength, $6 for species.


# transpose input matrix from cell*gene to gene*cell, and generate list of all pairs of genes
cat $1 | cut -d ',' -f 2- | tail -n +2 | sed 's/,/ /g' > cell_gene.tsv
cat $1 | head -n 1 | cut -d ',' -f 2- | tr ',' '\n' > gene_names
num_gene=`cat cell_gene.tsv | wc -l | sed -e 's/^[ \t]*//'`
python ./PreProcessScript_TE_Plus.py $6

# split pair list into # of jobs
num_job=$2
if [ -d "pair_jobs" ]; then
	rm -rf pair_jobs
fi
mkdir pair_jobs
mv all_pairs.csv pair_jobs/all_pairs.csv
cd pair_jobs
num_pair=`cat all_pairs.csv | wc -l | sed -e 's/^[ \t]*//'`
num_line=`expr $(expr ${num_pair} / ${num_job}) + 1`
split -a 3 -l ${num_line} all_pairs.csv pair_list_
rm -f all_pairs.csv
cd ..
ls -1 pair_jobs/ > list_jobfiles

## mpirun, by given number of jobs, check number of available cpu cores first
mpirun_cmd='time mpirun'
if [ -d "outputs" ]; then
	rm -rf outputs
fi
mkdir outputs
num_job=`grep -cv '^[[:space:]]*$' list_jobfiles`

for ((loop=1;loop<=${num_job};loop++))
do
	input_file=`cat list_jobfiles | head -n $loop | tail -n 1`
	output_id=`cat list_jobfiles | head -n $loop | tail -n 1 | cut -d '_' -f 3`
	#echo $mpirun_cmd
	mpirun_cmd=`echo $mpirun_cmd | sed -e "s/$/ -np 1 python runTE_Plus.py pair_jobs\/${input_file} outputs\/TE_out_${output_id}.csv $3 $4 $5 :/g"`
	#echo $mpirun_cmd
done
echo $mpirun_cmd | sed 's/ :$//g' > mpirun_script.sh
chmod a+x mpirun_script.sh
./mpirun_script.sh
sleep 5

cat outputs/*.csv > TE_result_all.csv
chmod a+x makeTEasMatrix.py
python makeTEasMatrix.py


#split colPeaks in list
TE_mtrx="TE_result_matrix.txt"


cut -f 1 $TE_mtrx | sort > TE_Matrix.sort.tmp

sort TE_peak_list.txt > TE_peak_list.sort.tmp
comm -12 TE_Matrix.sort.tmp TE_peak_list.sort.tmp > TE_peak_list.comm.tmp
wc -l *tmp
cut -d$'\t' -f 1 $TE_mtrx > rowNames.tmp

for i in `cat  TE_peak_list.comm.tmp`; do grep -n -w ^$i$ rowNames.tmp; done | cut -d":" -f 1 > LN.tmp
TE_peak_list=`perl -pe 's/\n/$1,/' LN.tmp |sed 's/.$//'`
TE_peak_list_Head=`echo "1,"$TE_peak_list`

#https://stackoverflow.com/questions/40842008/subset-a-file-by-row-and-column-numbers
awk -v rows="$TE_peak_list_Head" 'BEGIN{split(rows, a, ","); for (i in a) b[a[i]]} NR in b' $TE_mtrx > ${TE_mtrx%.txt}_rowPeak.txt

rm *tmp



#split col GN
TE_mtrx="TE_result_matrix_rowPeak.txt"

head -n 1 $TE_mtrx |sed 's/\t/\n/g' |grep -v "^[A-Za-z][^-:]*[-:][^-:]*[-:][^-:]*[0-9]$" |wc -l

head -n 1 $TE_mtrx |sed 's/\t/\n/g' |grep -v "^[A-Za-z][^-:]*[-:][^-:]*[-:][^-:]*[0-9]$"|awk '{ printf "%s,", $0 }'|sed 's/.$//' > TeGeneCols.txt

#sed 's/,/\n/g' TeGeneCols.txt |wc -l
#sed 's/,/\n/g' TeGeneCols.txt |head -n 5
#sed 's/,/\n/g' TeGeneCols.txt |tail -n 5

numGenes=`head -n 1 $TE_mtrx |sed 's/\t/\n/g' | grep -v "^[A-Za-z][^-:]*[-:][^-:]*[-:][^-:]*[0-9]$" |wc -l`
divisor=2500
quotient=`expr $numGenes / $divisor`

echo $numGenes $divisor $quotient

#https://stackoverflow.com/questions/36471244/print-certains-columns-by-header-name-with-spaces-on-it-awk-sed
for ((i=0;i<=$quotient;i++))
do
echo $i
cut -d "," -f $((1+$divisor*$i))-$(($divisor*$((i+1)))) TeGeneCols.txt > tmp$i
awk -v cols=`cat tmp$i` 'BEGIN{FS=OFS="\t"; nc=split(cols, a, ",")} NR==1{for (i=1; i<=NF; i++) hdr[$i]=i} {for (i=1; i<=nc; i++) if (a[i] in hdr) printf "%s%s", $hdr[a[i]], (i<nc?OFS:ORS)}' $TE_mtrx >TMP$i
done

paste TMP* > ${TE_mtrx%.txt}_colGN.txt
awk '{print NF; exit}' ${TE_mtrx%.txt}_colGN.txt

rm tmp* TMP* TeGeneCols.txt


rm TE_result_matrix_rowPeak.txt



#split row TF
TE_mtrx="TE_result_matrix.txt"

TF_list="GO_symbol_"$6"_regulation_of_transcription+sequence-specific_DNA_binding_list.txt"

cut -f 1 $TE_mtrx | sort > TE_Matrix.sort.tmp
sort $TF_list > TFs.sort.tmp
comm -12 TE_Matrix.sort.tmp TFs.sort.tmp > TFs.comm.tmp
wc -l *tmp
cut -d$'\t' -f 1 $TE_mtrx > rowNames.tmp

for i in `cat  TFs.comm.tmp`; do grep -n -w ^$i$ rowNames.tmp; done | cut -d":" -f 1 > LN.tmp
TFs=`perl -pe 's/\n/$1,/' LN.tmp |sed 's/.$//'`
HeadTFs=`echo "1,"$TFs`

#https://stackoverflow.com/questions/40842008/subset-a-file-by-row-and-column-numbers
awk -v rows="$HeadTFs" 'BEGIN{split(rows, a, ","); for (i in a) b[a[i]]} NR in b' $TE_mtrx > ${TE_mtrx%.txt}_rowTF.txt

rm *tmp



#split col GN
TE_mtrx="TE_result_matrix_rowTF.txt"

head -n 1 $TE_mtrx |sed 's/\t/\n/g' |grep -v "^[A-Za-z][^-:]*[-:][^-:]*[-:][^-:]*[0-9]$" |wc -l

head -n 1 $TE_mtrx |sed 's/\t/\n/g' |grep -v "^[A-Za-z][^-:]*[-:][^-:]*[-:][^-:]*[0-9]$"|awk '{ printf "%s,", $0 }'|sed 's/.$//' > TeGeneCols.txt

#sed 's/,/\n/g' TeGeneCols.txt |wc -l
#sed 's/,/\n/g' TeGeneCols.txt |head -n 5
#sed 's/,/\n/g' TeGeneCols.txt |tail -n 5

numGenes=`head -n 1 $TE_mtrx |sed 's/\t/\n/g' | grep -v "^[A-Za-z][^-:]*[-:][^-:]*[-:][^-:]*[0-9]$" |wc -l`
divisor=2500
quotient=`expr $numGenes / $divisor`

echo $numGenes $divisor $quotient

#https://stackoverflow.com/questions/36471244/print-certains-columns-by-header-name-with-spaces-on-it-awk-sed
for ((i=0;i<=$quotient;i++))
do
echo $i
cut -d "," -f $((1+$divisor*$i))-$(($divisor*$((i+1)))) TeGeneCols.txt > tmp$i
awk -v cols=`cat tmp$i` 'BEGIN{FS=OFS="\t"; nc=split(cols, a, ",")} NR==1{for (i=1; i<=NF; i++) hdr[$i]=i} {for (i=1; i<=nc; i++) if (a[i] in hdr) printf "%s%s", $hdr[a[i]], (i<nc?OFS:ORS)}' $TE_mtrx >TMP$i
done

paste TMP* > ${TE_mtrx%.txt}_colGN.txt
awk '{print NF; exit}' ${TE_mtrx%.txt}_colGN.txt

rm tmp* TMP* TeGeneCols.txt



#split col PK
head -n 1 $TE_mtrx |sed 's/\t/\n/g' |grep -P "^[A-Za-z][^-:]*[-:][^-:]*[-:][^-:]*[0-9]$" |wc -l

PeakCols=`head -n 1 $TE_mtrx |sed 's/\t/\n/g' |grep -P "^[A-Za-z][^-:]*[-:][^-:]*[-:][^-:]*[0-9]$" |awk '{ printf "%s,", $0 }'|sed 's/.$//'`
TE='TE'
TePeakCols="$TE,$PeakCols" 	
echo $TePeakCols > TePeakCols.txt
#sed 's/,/\n/g' TePeakCols.txt |wc -l
#sed 's/,/\n/g' TePeakCols.txt |head -n 5
#sed 's/,/\n/g' TePeakCols.txt |tail -n 5

numPeaks=`head -n 1 $TE_mtrx |sed 's/\t/\n/g' | grep -P "^[A-Za-z][^-:]*[-:][^-:]*[-:][^-:]*[0-9]$" |wc -l`
divisor=2500
quotient=`expr $numPeaks / $divisor`

echo $numPeaks $divisor $quotient

#https://stackoverflow.com/questions/36471244/print-certains-columns-by-header-name-with-spaces-on-it-awk-sed
for ((i=0;i<=$quotient;i++))
do
echo $i
cut -d "," -f $((1+$divisor*$i))-$(($divisor*$((i+1)))) TePeakCols.txt > tmp$i
awk -v cols=`cat tmp$i` 'BEGIN{FS=OFS="\t"; nc=split(cols, a, ",")} NR==1{for (i=1; i<=NF; i++) hdr[$i]=i} {for (i=1; i<=nc; i++) if (a[i] in hdr) printf "%s%s", $hdr[a[i]], (i<nc?OFS:ORS)}' $TE_mtrx >TMP$i
done

paste TMP* > ${TE_mtrx%.txt}_colPK.txt
awk '{print NF; exit}' ${TE_mtrx%.txt}_colPK.txt

rm tmp* TMP* TePeakCols.txt


rm TE_result_matrix_rowTF.txt





